{"version":3,"sources":["shortSha.js","JobCard.js","JobGrid.js","App.js","registerServiceWorker.js","index.js"],"names":["shortSha","sha","substring","JobCard","Component","commitDesc","this","props","branch","commit","undefined","author","name","message","stateDesc","moment","date","fromNow","state","react_default","a","createElement","Card_default","className","CardContent_default","Typography_default","variant","component","JobGrid","_this","JobGrid_classCallCheck","JobGrid_possibleConstructorReturn","JobGrid_getPrototypeOf","call","fetchBranches","client","repos","getBranches","owner","repo","then","_ref","data","console","debug","setState","branches","forEach","fetchCommit","catch","error","commits","Map","_this2","timer","window","setInterval","clearInterval","_this3","getCommit","_ref2","concat","newCommit","Object","assign","set","fetchStatus","_this4","getCombinedStatusForRef","ref","_ref3","statuses","get","_this5","sortedBranches","slice","sort","branchA","branchB","has","dateA","dateB","isBefore","Grid_default","container","spacing","map","item","xs","key","JobCard_JobCard","octokit","theme","createMuiTheme","palette","type","SlideTransition","Slide_default","direction","App","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","handleSettingsSubmit","event","preventDefault","target","elements","value","token","authenticate","localStorage","setItem","isSettingsOpen","handleOpenSettings","handleCloseSettings","getItem","MuiThemeProvider","AppBar_default","position","color","Toolbar_default","style","flexGrow","Button_default","onClick","JobGrid_JobGrid","Dialog_default","fullScreen","open","onClose","TransitionComponent","onSubmit","IconButton_default","aria-label","Close_default","List_default","ListItem_default","TextField_default","label","defaultValue","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e11c07a7.chunk.js","sourcesContent":["export default function shortSha(sha) {\n  return sha.substring(0, 6)\n}","import React, {Component} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport './JobCard.css'\nimport CardContent from \"@material-ui/core/CardContent/CardContent\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport moment from 'moment';\nimport shortSha from './shortSha'\n\nexport default class JobCard extends Component {\n\n  render() {\n    let commitDesc = shortSha(this.props.branch.commit.sha);\n    if(undefined !== this.props.commit) {\n      commitDesc = this.props.commit.commit.author.name + ': '+ this.props.commit.commit.message;\n    }\n\n    let stateDesc = 'loading...';\n    if(undefined !== this.props.commit) {\n      stateDesc =  moment(this.props.commit.commit.author.date).fromNow()\n    }\n\n    let state = 'loading';\n    if(undefined !== this.props.commit && undefined !== this.props.commit.state) {\n      state = this.props.commit.state;\n    }\n\n    return (\n        <Card className={\"job-card \" + state}>\n          <CardContent>\n            <Typography variant={\"headline\"} component=\"h2\" className=\"job-name\">\n              {this.props.branch.name}\n            </Typography>\n            <Typography variant={\"subheading\"} component=\"h3\" className=\"commit-desc\">\n              {commitDesc}\n            </Typography>\n            <Typography component=\"p\" className=\"commit-desc\">\n              {stateDesc}\n            </Typography>\n          </CardContent>\n        </Card>\n    );\n  }\n}","import Grid from \"@material-ui/core/Grid/Grid\";\nimport JobCard from \"./JobCard\";\nimport React, {Component} from \"react\";\nimport './JobGrid.css';\nimport shortSha from './shortSha'\nimport moment from \"moment\";\n\nexport default class JobGrid extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      branches: [],\n      commits: new Map(),\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBranches();\n    this.timer = window.setInterval(() => {this.fetchBranches()}, 1000*30)\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timer)\n  }\n\n  fetchBranches = () => {\n    this.props.client.repos.getBranches({\n      owner: this.props.owner,\n      repo: this.props.repo\n    }).then(({data}) => {\n      console.debug('Fetched branches');\n      this.setState({branches: data});\n      data.forEach(branch => {\n          this.fetchCommit(branch.commit.sha);\n      })\n    }).catch(console.error)\n  };\n\n  fetchCommit(sha) {\n    this.props.client.repos.getCommit({\n      owner: this.props.owner,\n      repo: this.props.repo,\n      sha: sha\n    })\n        .then(({data}) => {\n          console.debug(`Fetched commit ${shortSha(sha)}`);\n          let newCommit = Object.assign({}, this.getCommit(sha), data);\n          this.setState({commits: new Map(this.state.commits).set(sha, newCommit)});\n          this.fetchStatus(sha)\n        }).catch(console.error)\n  }\n\n  fetchStatus(sha) {\n    this.props.client.repos.getCombinedStatusForRef({\n      owner: this.props.owner,\n      repo: this.props.repo,\n      ref: sha\n    })\n        .then(({data}) => {\n          console.debug(`Fetched status for ${shortSha(sha)}`);\n          let newCommit = Object.assign({}, this.getCommit(sha), {state: data.state, statuses: data.statuses});\n          this.setState({commits: new Map(this.state.commits).set(sha, newCommit)})\n        }).catch(console.error)\n  }\n\n  getCommit(sha) {\n    return this.state.commits.get(sha);\n  }\n\n  render() {\n    let sortedBranches = this.state.branches.slice().sort((branchA, branchB) => {\n      if(!this.state.commits.has(branchA.commit.sha) && !this.state.commits.has(branchB.commit.sha)) {\n        return 0; // Do nothing\n      }\n      if(!this.state.commits.has(branchA.commit.sha)) {\n        return 2; // Sort B to a lower index\n      }\n      if(!this.state.commits.has(branchB.commit.sha)) {\n        return -2; // Sort B to a lower index\n      }\n      let dateA = this.getCommit(branchA.commit.sha).commit.author.date;\n      let dateB = this.getCommit(branchB.commit.sha).commit.author.date;\n      if(dateA === dateB) {\n        return 0; // Do nothing\n      }\n      return moment(dateA).isBefore(dateB) ? 1 : -1;\n    });\n\n    return (\n        <Grid container spacing={16} className=\"job-grid\">\n          {sortedBranches.map(branch => {\n            return (\n                <Grid item xs={4} key={branch.name}>\n                  <JobCard branch={branch} commit={this.getCommit(branch.commit.sha)}/>\n                </Grid>\n            )\n          })}\n        </Grid>\n    )\n  }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport octokit from '@octokit/rest';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport JobGrid from \"./JobGrid\";\nimport MuiThemeProvider from \"@material-ui/core/es/styles/MuiThemeProvider\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport AppBar from \"@material-ui/core/AppBar/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar/Toolbar\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton/IconButton\";\nimport List from \"@material-ui/core/List/List\";\nimport ListItem from \"@material-ui/core/ListItem/ListItem\";\nimport Slide from \"@material-ui/core/Slide/Slide\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst client = octokit();\n\nconst theme = createMuiTheme({palette: {type: 'dark'}});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    let token = localStorage.getItem('token');\n    this.state = {\n      owner: localStorage.getItem('owner'),\n      repo: localStorage.getItem('repo'),\n      token: token,\n      isSettingsOpen: !token\n    };\n\n    // If token found, authenticate already\n    if(token) {\n      client.authenticate({type: 'token', token: token});\n    }\n  }\n\n  handleSettingsSubmit = (event) => {\n    event.preventDefault();\n    let owner = event.target.elements.owner.value;\n    let repo = event.target.elements.repo.value;\n    let token = event.target.elements.token.value;\n    // If token changed, re-authenticate\n    if(token !== this.state.token) {\n      client.authenticate({type: 'token', token: token});\n    }\n    // Store new values\n    localStorage.setItem('owner', owner);\n    localStorage.setItem('repo', repo);\n    localStorage.setItem('token', token);\n    this.setState({\n      owner: owner,\n      repo: repo,\n      token: token,\n      isSettingsOpen: false\n    });\n  };\n\n  handleOpenSettings = () => {\n    this.setState({isSettingsOpen: true})\n  };\n\n  handleCloseSettings = () => {\n    this.setState({isSettingsOpen: false})\n  };\n\n  render() {\n    return (\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"static\" color=\"default\">\n            <Toolbar>\n              <Typography variant=\"title\" color=\"inherit\" style={{flexGrow: 1}}>\n                {this.state.owner} / {this.state.repo}\n              </Typography>\n              <Button onClick={this.handleOpenSettings}>Settings</Button>\n            </Toolbar>\n          </AppBar>\n          <JobGrid client={client} {...this.state}/>\n          <Dialog\n              fullScreen\n              open={this.state.isSettingsOpen}\n              onClose={this.handleCloseSettings}\n              TransitionComponent={SlideTransition}\n          >\n            <form onSubmit={this.handleSettingsSubmit}>\n              <AppBar color=\"default\" style={{position: 'relative'}}>\n                <Toolbar>\n                  <IconButton color=\"inherit\" onClick={this.handleCloseSettings} aria-label=\"Close\">\n                    <CloseIcon/>\n                  </IconButton>\n                  <Typography variant=\"title\" color=\"inherit\" style={{flexGrow: 1}}>\n                    Settings\n                  </Typography>\n                  <Button color=\"inherit\" type=\"submit\">\n                    Save\n                  </Button>\n                </Toolbar>\n              </AppBar>\n              <List>\n                <ListItem>\n                  <TextField label=\"Owner\" name=\"owner\" defaultValue={this.state.owner}/>\n                </ListItem>\n                <ListItem>\n                  <TextField label=\"Repo\" name=\"repo\" defaultValue={this.state.repo}/>\n                </ListItem>\n                <ListItem>\n                  <TextField label=\"Token\" name=\"token\" defaultValue={this.state.token}/>\n                </ListItem>\n              </List>\n            </form>\n          </Dialog>\n        </MuiThemeProvider>\n    );\n  }\n}\n\nfunction SlideTransition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}